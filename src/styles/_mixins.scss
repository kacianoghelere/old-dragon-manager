@import "~bootstrap/scss/mixins";

@function color-yiq($color) {
  $r: red($color);
  $g: green($color);
  $b: blue($color);

  $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;

  @if ($yiq >= 200) {
    @return #333;
  } @else {
    @return $really-white;
  }
}

@function colorize-it($color) {
  $r: red($color);
  $g: green($color);
  $b: blue($color);

  $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;

  @if ($yiq >= 200) {
    @return $gray-600;
  } @else {
    @return $color;
  }
}

@mixin button-background($background) {
  background-color: $background;
  background-size: cover;
}

@mixin button-border($border-color: #b08f5f, $gradient-start: #f4d09c, $gradient-end: #9b7947) {
  border-width: $btn-border-width;
  border-color: $border-color;
  border-image: -webkit-gradient(linear, left top, left bottom, from($gradient-start), to($gradient-end));
  border-image: linear-gradient(180deg, $gradient-start, $gradient-end);
  border-image-slice: 1;
  border-image-width: $btn-border-width;
  border-radius: $btn-border-radius !important;
  border-style: outset;
}

@mixin button-variant($background, $border, $active-background: darken($background, 15%), $active-border: darken($border, 5%), $hover-background: darken($background, 10%)) {
  color: color-yiq($background) !important;
  position: relative;
  text-shadow: 0 1px 0 rgba($black, .5);
  @include button-background($background);
  @include button-border();

  &:hover {
    @include button-background($hover-background);
  }

  &:focus,
  &.focus {
    @if $enable-shadows {
      box-shadow: $btn-box-shadow, 0 0 0 3px rgba($border, .5);
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    @include button-background($background);
    border-color: $background;
    border-style: solid;

    &::before,
    &::after {
      border-color: $gray-100;
    }
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    @include button-background($active-background);
    border-color: #fcad35;
  }
}

@mixin button-outline-variant($color, $color-hover: #fff, $active-color: darken($color, 10%)) {
  @include button-border();
  background-color: $really-white;
  background-image: none;
  color: colorize-it($color);

  @include hover {
    @include button-background($color);
    color: color-yiq($color);
  }

  &:focus,
  &.focus {
    @if $enable-shadows {
      box-shadow: $btn-box-shadow, 0 0 0 3px rgba($color, .5);
    }
  }

  &.disabled,
  &:disabled {
    background-color: transparent;
    color: $color;
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    @include button-background($active-color);
    border-color: $active-color;
    color: color-yiq($color) !important;
  }
}

@mixin button-minimal-variant($color, $color-hover: #fff, $active-color: darken($color, 10%)) {
  @include button-border(transparent, transparent, transparent);
  background-color: $really-white;
  background-image: none;
  border-radius: $btn-border-radius;
  box-shadow: $btn-box-shadow;
  color: colorize-it($color);

  @include hover {
    @include button-background($color);
    @include button-border(#b0b0b0, #eee, #9b9b9b);
    color: color-yiq($color);
  }

  &:focus,
  &.focus {
    @if $enable-shadows {
      box-shadow: $btn-box-shadow, 0 0 0 3px rgba($color, .5);
    }
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $color-hover;
    @include button-background($active-color);
  }
}
